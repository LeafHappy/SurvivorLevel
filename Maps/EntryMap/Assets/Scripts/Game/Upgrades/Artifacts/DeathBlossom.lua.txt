-- ================================================================================================
-- SECTION -- Libraries
-- ================================================================================================

local Core = require("Core")
local EJS = require("Data/EJS")

local SimpleUnit = require("Class/Simple/SimpleUnit")

local EffectPath = require("SharedData/Class/EffectPath")

-- ================================================================================================
-- !SECTION -- Libraries
-- SECTION -- Local Variables
-- ================================================================================================

local behaviors = {}

local effects = {
    cooldown = DCEI.Effect("Death Blossom - Apply Cooldown"),
    duration = DCEI.Effect("Death Blossom - Duration"),

    actor_size = DCEI.Effect("Death Blossom - Apply Actor Size"),

    collision_heal = DCEI.Effect("Death Blossom - Collision Heal"),
}

local death_blossom_damage = SimpleUnit.New("Death Blossom - Damage")
local death_blossom_heal = SimpleUnit.New("Death Blossom - Heal")

-- ================================================================================================
-- !SECTION -- Local Variables
-- SECTION -- Local Functions
-- ================================================================================================

-- ================================================================================================
-- !SECTION -- Local Functions
-- SECTION -- Upgrade
-- ================================================================================================

---@type _Upgrade
local Upgrade = {
    Name = "Death Blossom",
}

Upgrade.Cache = {
    -- [STAT.CastSpeed] = {
    --     EffectPath.New(effects.cooldown, EJS.ApplyBehavior.Duration),
    -- },
    [STAT.SkillDuration] = {
        EffectPath.New(effects.duration, EJS.ApplyBehavior.Duration),
    },
    [STAT.SkillSize] = {
        EffectPath.New(effects.actor_size, EJS.ApplyBehavior.Count, 45),
    },
    [STAT.Healing] = {
        EffectPath.New(effects.collision_heal, EJS.Heal.Value),
    },
}

-- ANCHOR: Override
-- Override occurs every time this weapon is modified
---@param hero Hero
function Upgrade.Override(hero)
    -- Shared Options (Heal/Damage)
    local cooldown = hero:GetStat(STAT.AttackSpeed, Upgrade.Name)
    hero:SetEffectValue(effects.cooldown, EJS.ApplyBehavior.Duration, cooldown)

    local size = hero:GetStat(STAT.SkillSize, Upgrade.Name)
    local duration = hero:GetStat(STAT.SkillDuration, Upgrade.Name)
    local damage = hero:GetStat(STAT.Damage, Upgrade.Name)
    local frequency = hero:GetStat(STAT.Frequency, Upgrade.Name)

    -- Damage
    death_blossom_damage:SetTimer(duration, duration)
    death_blossom_damage:SetCollision(CollisionLayers.None, CollisionLayers.Hostile, size)
    death_blossom_damage:SetDamageApplier(
        CollisionTiming.Start | CollisionTiming.Continue,
        frequency,
        damage,
        DamageNumberStyles.DamageOverTime
    )
    death_blossom_damage:Register()

    -- Heal
    death_blossom_heal:SetTimer(duration, duration)
    death_blossom_heal:SetCollision(CollisionLayers.None, CollisionLayers.Friendly, size)
    death_blossom_heal:SetCollisionEffect(
        effects.collision_heal,
        CollisionTiming.Start | CollisionTiming.Continue,
        frequency
    )
    death_blossom_heal:Register()
end

-- ================================================================================================
-- !SECTION -- Upgrade
-- SECTION -- Hookups
-- ================================================================================================

-- ================================================================================================
-- !SECTION -- Hookups
-- ================================================================================================

return Upgrade
