---============================================================================
---SECTION: Libraries
---============================================================================

local Core = require("Core:Presentation")
local GMUI = require("GMUI:Presentation")
local Json = require("json")

---============================================================================
---!SECTION: Libraries
---SECTION: Scripts
---============================================================================

local Animation = require("Presentation/Animation")
local Help = require("UiHelp")
local InAppOfferManager = require("UiMeta/InAppOffer/InAppOfferManager")
local ResourceDisplay = require("UiCamp/ResourceDisplay")
local SettingsMenuHelper = require("UiMeta/Settings/SettingsMenuHelper")
local TimerComponent = require("UiMeta/Components/TimerComponent")
local DataManager = require("UiMeta/DataManager")

local ui = GMUI.ui

---============================================================================
---!SECTION: Scripts
---SECTION: Local Data
---============================================================================

-- LAYOUT
local Overlay = {}
Overlay.is_initialized = false

---============================================================================
---!SECTION: Local Data
---SECTION: Local Functions
---============================================================================

---============================================================================
---!SECTION: Local Functions
---SECTION: Methods
---============================================================================

function Overlay.Initialize()
    if Overlay.is_initialized then
        return
    end

    ---@class Layout
    Overlay.layout = GMUI.Layout.New({
        name = "Camp/Overlay",
        parent = ui.z1.Upper,
    })

    local loading_mask = GMUI.Layout.New({
        name = "Common/MaskBlocking",
        parent = ui.z1.Lower,
    })
    ui.camp.loading_mask = loading_mask

    function loading_mask:OnShow()
        Animation.FadeIn(self.Frame)
    end

    loading_mask.HideActual = loading_mask.Hide
    function loading_mask:Hide()
        local duration = 0.25
        Animation.FadeOut(self.Frame, duration)
        GMUI.RunFunctionAfterTimeElapsed(function()
            self:HideActual()
        end, duration)
    end
    loading_mask:HideActual()

    function Overlay.layout:StartOfferTimer(offer_data)
        local controller = TimerComponent.Create(Overlay.layout.navigation.offer_timer.Frame, offer_data.id)
        local time_started = DataManager.GetInAppOfferTimeStarted(offer_data.id)
        local current_time = os.time()
        local time_remaining = offer_data.time_offered - (current_time - time_started)
        controller:StartTimer(time_remaining)

        DCEI.SetFrameActive(Overlay.layout.navigation.offer_button.Frame, true)
    end

    function Overlay.layout:RemoveOffer()
        DCEI.SetFrameActive(Overlay.layout.navigation.offer_button.Frame, false)
    end

    -- Create resource bars
    DCEI.WaitForUiUpdateToComplete(function()
        ResourceDisplay.Create(Overlay.layout.resources)
    end)

    -- Setup navigation
    DCEI.SetOnClickCallback(Overlay.layout.navigation.options_button.Button, function()
        DCEI.PlaySound(DCEI.Sound("smh_click_start"))
        SettingsMenuHelper.Open()
    end)
    DCEI.SetOnClickCallback(Overlay.layout.navigation.quest_button.Button, function()
        DCEI.PlaySound(DCEI.Sound("smh_click_start"))
        Core.Event.SendSimulationEvent("QuestManager.OpenQuestGuide")
    end)
    DCEI.SetOnClickCallback(Overlay.layout.navigation.offer_button.Button, function()
        DCEI.PlaySound(DCEI.Sound("smh_click_start"))
        InAppOfferManager.OpenInitialOffer()
    end)

    -- Initialize Experience UI Controller
    Overlay.layout.experience.controller = DCEI.GetFrameController(Overlay.layout.experience.Frame)
    Overlay.layout.experience.controller:SetDelayEffectFunc(GMUI.RunFunctionAfterTimeElapsed)
    Overlay.layout.experience.controller:Reset()

    -- Start Next Wave
    -- DCEI.SetOnClickCallback(Overlay.layout.StartButton, function()
    --     DCEI.PlaySound(DCEI.Sound("smh_click_start"))
    --     Core.Event.SendSimulationEvent("hybrid.start")
    -- end)

    return Overlay.layout
end

---============================================================================
---!SECTION: Methods
---SECTION: Event Functions
---============================================================================

local function ShowOverlay()
    Overlay.layout:Show()
end

local function HideOverlay()
    Overlay.layout:Hide()
end

local function LinkHealthStatus(data)
    local unit = GMUI.GetUnitFromUnitReference(data.unit_ref)
    DCEI.BindUnitData("star", unit)
    DCEI.SetFrameImageFillAmountExpression(Overlay.layout.star_health.Fill, "star.Health.Fraction", false)

    local display_name = data.display_name
    DCEI.SetTextFrameText(Overlay.layout.star_health.Label, display_name)

    Overlay.layout.star_health:Show()
end

local function HideHealthStatus()
    Overlay.layout.star_health:Hide()
end

local function SetExperienceFillAmount(fill_amount)
    DCEI.SetFrameImageFillAmount(Overlay.layout.experience.fill, fill_amount)
end

local function SetPlayerLevel(level)
    local text = "Lv. <size=130%%>%s</size>"
    DCEI.SetTextFrameText(Overlay.layout.experience.label, text:format(tostring(level)))
end

local function SetSkillPoints(count)
    if count <= 0 then
        Overlay.layout.skill_points:Hide()
    else
        Overlay.layout.skill_points:Show()
        local text = string.format("+%d", count)
        DCEI.SetTextFrameText(Overlay.layout.skill_points.label, text)
    end
end

local function SetGameTime(time)
    Overlay.layout.timer:Show()
    local text = Core.String.FormatTimeMinutes(time, 0)
    DCEI.SetTextFrameText(Overlay.layout.timer.label, text)
end

local function HideGameTimer()
    Overlay.layout.timer:Hide()
end

local function ShowObjective(text)
    Overlay.layout.objective.state.display_text = text
    Overlay.layout.objective:Show()
end

local function HideObjective()
    Overlay.layout.objective:Hide()
end

---============================================================================
---!SECTION: Event Functions
---SECTION: Events
---============================================================================

Core.Event.RegisterPresentationEvent("Camp.Overlay.Show", ShowOverlay)
Core.Event.RegisterPresentationEvent("Camp.Overlay.Hide", HideOverlay)

Core.Event.RegisterPresentationEvent("Camp.Overlay.LinkHealthStatus", LinkHealthStatus)
Core.Event.RegisterPresentationEvent("Camp.Overlay.HideHealthStatus", HideHealthStatus)

Core.Event.RegisterPresentationEvent("Camp.Overlay.SetExperienceFillAmount", SetExperienceFillAmount)
Core.Event.RegisterPresentationEvent("Camp.Overlay.SetPlayerLevel", SetPlayerLevel)

Core.Event.RegisterPresentationEvent("Camp.Overlay.SetSkillPoints", SetSkillPoints)

Core.Event.RegisterPresentationEvent("Camp.Overlay.SetGameTime", SetGameTime)
Core.Event.RegisterPresentationEvent("Camp.Overlay.HideGameTimer", HideGameTimer)

Core.Event.RegisterPresentationEvent("Camp.Overlay.ShowObjective", ShowObjective)
Core.Event.RegisterPresentationEvent("Camp.Overlay.HideObjective", HideObjective)

---============================================================================
---!SECTION: Events
---============================================================================

-- EXPORT
return Overlay.Initialize()
